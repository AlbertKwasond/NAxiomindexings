@model AxiomAdmin.ViewModel.UsersAccountsViewModle

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Staff Accounts/</span> Create New Staff </h4>

    <!-- Basic Layout -->
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                
                <div class="card-body">

                    <form asp-action="Save" id="saveId" data-ajax="true" data-ajax-method="post" data-ajax-success="ajaxSuccess" >
                        <div asp-validation-summary="All" class="text-danger"></div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.FirstName" class="control-label"></label>
                                    <input id="FirstName" name="FirstName" asp-for="GetUsersAccount.FirstName" class="form-control" />
                                    <span asp-validation-for="GetUsersAccount.FirstName" class="text-danger"></span>
                                </div>
                            </div><!--end col-->

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.LastName" class="control-label"></label>
                                    <input id="LastName" name="LastName" asp-for="GetUsersAccount.LastName" class="form-control" />
                                    <span asp-validation-for="GetUsersAccount.LastName" class="text-danger"></span>
                                </div>
                            </div><!--end col-->

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.Gender" class="control-label"></label>
                                    <select id="Gender" name="Gender" asp-for="GetUsersAccount.Gender" class="form-control">
                                        <option value="" selected>Select a gender</option>
                                        <option value="Male">Male </option>
                                        <option value="Female">Female</option>
                                    </select>
                                    <span asp-validation-for="GetUsersAccount.Gender" class="text-danger"></span>
                                </div>
                            </div><!--end col-->

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.DOB" class="control-label"></label>
                                    <input id="DOB" name="DOB" asp-for="GetUsersAccount.DOB" class="form-control" />
                                    <span asp-validation-for="GetUsersAccount.DOB" class="text-danger"></span>
                                </div>
                            </div><!--end col-->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.MobileNumber" class="control-label"></label>
                                    <input id="MobileNumber" name="MobileNumber" asp-for="GetUsersAccount.MobileNumber" class="form-control" />
                                    <span asp-validation-for="GetUsersAccount.MobileNumber" class="text-danger"></span>
                                </div>
                            </div><!--end col-->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.Email" class="control-label"></label>
                                    <input id="Email" name="Email" asp-for="GetUsersAccount.Email" class="form-control" />
                                    <span asp-validation-for="GetUsersAccount.Email" class="text-danger"></span>
                                </div>
                            </div><!--end col-->

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.Address" class="control-label"></label>
                                    <input id="Address" name="Address" asp-for="GetUsersAccount.Address" class="form-control" />
                                    <span asp-validation-for="GetUsersAccount.Address" class="text-danger"></span>
                                </div>
                            </div><!--end col-->

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="GetUsersAccount.Roles" class="control-label"></label>

                                    <select id="Roles" name="Roles" asp-for="GetUsersAccount.Roles" class="form-control" asp-for="GetUsersAccount.Roles" asp-items="Model.Roles">
                                        <option value="" selected>Select a role</option>
                                    </select>

                                    <span asp-validation-for="GetUsersAccount.Roles" class="text-danger"></span>
                                </div>
                            </div><!--end col-->

                            <div class="col-lg-12">
                                <div class="text-end">
                                    <button id="submitButton" type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div><!--end col-->
                        </div><!--end row-->

                    </form>

                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {


    <script>
        $(document).ready(function () {
            $("#submitButton").click(function (event) {
                event.preventDefault();
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Are you sure you want to save this Staff Information?',
                    icon: 'warning',
                    type: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                }).then((result) => {
                    if (result.value) {
                        $("#submitButton").prop("disabled", true);
                        $("#saveId").submit();
                    }
                });
            });

            $(document).bind("ajaxComplete", function () {
                $("#submitButton").prop("disabled", false);
            });
        });

        function ajaxComplete(xhr, status) {
            // Code to handle the completion of the AJAX call
        }

        function ajaxSuccess(data, status, xhr) {
            // Code to handle a successful AJAX call
            Swal.close();
            Swal.fire({
                title: 'Success',
                icon: 'success',
                text: 'Staff record successfully updated',
                type: 'success',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.value) {
                    window.location.href = '/UsersAccounts/Index';
                }
            });
        }

        function ajaxFailure(xhr, status, error) {
            // Get the error message from the server response
            var errorMessage = xhr.responseText;

            Swal.close();
            Swal.fire({
                title: 'Error',
                text: errorMessage,
                icon: 'error',
                type: 'error',
                confirmButtonText: 'OK'
            });
        }


    </script>

    <!-- Add the following JavaScript code to your HTML -->
  
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Select the password input field and validation list items
            var passwordInput = document.getElementById('password');
            var validationListItems = document.querySelectorAll('#password-validation-list li');
            var passwordValidationMessage = document.getElementById('password-validation-message');

            // Add an event listener for the input event on the password input field
            passwordInput.addEventListener('input', function () {
                // Get the value of the password input field
                var password = passwordInput.value;

                // Check if the password is null or empty
                if (!password) {
                    passwordValidationMessage.textContent = "Password cannot be empty";
                    return; // Stop further validation
                } else {
                    passwordValidationMessage.textContent = ""; // Clear the error message
                }

                // Define an object to store the validation results
                var checker = {
                    hasLowerCase: /[a-z]/.test(password),
                    hasUpperCase: /[A-Z]/.test(password),
                    hasSpecialCharacter: /[!#$%^&*()_+{}\[\]:;<>,.?~\\/-]/.test(password),
                    hasNumber: /\d/.test(password),
                    hasValidLength: password.length >= 8
                };

                // Call the function to update the visual representation of validation rules
                updateValidationList(checker);
            });

            // Function to update the visual representation of validation rules
            function updateValidationList(checker) {
                // Iterate over each validation list item
                validationListItems.forEach(function (item) {
                    var dotSpan = item.querySelector('.dot');
                    var textSpan = item.querySelector('.ng-binding');

                    // Remove existing classes
                    dotSpan.classList.remove('text-success', 'text-muted');
                    textSpan.classList.remove('text-success', 'text-muted');

                    // Add appropriate classes based on validation result
                    if (checker['has' + item.dataset.check]) {
                        dotSpan.classList.add('text-success');
                        textSpan.classList.add('text-success');
                    } else {
                        dotSpan.classList.add('text-muted');
                        textSpan.classList.add('text-muted');
                    }
                });
            }
        });
    </script>



    
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
